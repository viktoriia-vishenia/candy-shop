spring.datasource.url=jdbc:postgresql://localhost:5432/candy_shop
spring.datasource.username=${USERNAME}
spring.datasource.password=${USERPASSWORD}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

server.port=8082
#server.port=0
#eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name=order-service

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilinece4j Properties
resilience4j.circuitbreaker.instances.inventoryIsAvailable.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventoryIsAvailable.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventoryIsAvailable.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventoryIsAvailable.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventoryIsAvailable.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventoryIsAvailable.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventoryIsAvailable.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventoryIsAvailable.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.inventoryIsAvailable.timeout-duration=100s

#Resilience4J Retry Properties
resilience4j.retry.instances.inventoryIsAvailable.max-attempts=39
resilience4j.retry.instances.inventoryIsAvailable.wait-duration=50s

#Kafka settings
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=com.inn.orderservice.serializer.InventoryDtoListSerializer

spring.kafka.consumer.group-id=order-send-consumer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#Keycloak settings
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/candy-shop-realm
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/candy-shop-realm
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.client.registration.keycloak.client-id=candy-shop-client
spring.security.oauth2.client.registration.keycloak.client-secret=C7DGqI6W0aiy1v49DUMq0wFYTUxFJaVK
spring.security.oauth2.client.registration.keycloak.scope=openid
